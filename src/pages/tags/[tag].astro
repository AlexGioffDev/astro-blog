---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro"
import { MarkdownInstance } from "astro/dist/@types/astro";


export async function getStaticPaths(): Promise<{ params: { tag: string; }; props: { posts: MarkdownInstance<{ tags: string[]; title: string; }>[]; }; }[]> {
    const allPosts: MarkdownInstance<{ tags: string[]; title: string; }>[] = await Astro.glob("../posts/*.md");
    const uniqueTags: string[] = [...new Set(allPosts.map((post: MarkdownInstance<{ tags: string[]; title: string; }>) => post.frontmatter.tags).flat())];

    return uniqueTags.map((tag: string) => {
    const filteredPosts: MarkdownInstance<{ tags: string[]; title: string; }>[] = allPosts.filter((post: MarkdownInstance<{ tags: string[]; title: string; }>) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const {tag}: { tag: string } = Astro.params;
const {posts}: { posts: MarkdownInstance<{ tags: string[]; title: string; }>[] } = Astro.props;


---

<BaseLayout pageTitle={tag}>
    <p>Post tagged with {tag}</p>
    <ul>
        {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title} />)}
    </ul>
</BaseLayout>
